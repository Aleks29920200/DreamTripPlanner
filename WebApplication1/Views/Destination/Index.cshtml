@using WebApplication1.Controllers
@model PaginatedList<WebApplication1.Models.Destination>

@{
    ViewData["Title"] = "Destinations";
}

<h1>Destinations</h1>


<form asp-controller="Destinations" asp-action="Index" method="get" class="mb-3">
    <div class="form-group">
        <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="Search destinations by name, description, or location" />
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
</form>

<p>
    <a asp-action="Create" class="btn btn-success">Create New Destination</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">Name</a>
            </th>
            <th>
                Description
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["LocationSortParm"]">Location</a>
            </th>
            <th>
                Popular Season
            </th>
            <th>
                Image
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (!Model.Any())
        {
            <tr>
                <td colspan="6" class="text-center">No destinations found.</td>
            </tr>
        }
        else
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                    <td>@Html.DisplayFor(modelItem => item.Location)</td>
                    <td>@Html.DisplayFor(modelItem => item.PopularSeason)</td>
                    <td>
                        <img src="@Html.DisplayFor(modelItem => item.ImageFileName)" alt="" width="100" />
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.DestinationId" class="btn btn-sm btn-warning">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.DestinationId" class="btn btn-sm btn-info">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.DestinationId" class="btn btn-sm btn-danger">Delete</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>


@if (Model.HasPreviousPage || Model.HasNextPage)
{
    <nav>
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageIndex - 1)" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-searchString="@ViewData["CurrentFilter"]">Previous</a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-searchString="@ViewData["CurrentFilter"]">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageIndex + 1)" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-searchString="@ViewData["CurrentFilter"]">Next</a>
                </li>
            }
        </ul>
    </nav>
}
